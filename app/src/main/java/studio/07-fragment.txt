fragment => components
- 모듈식 (재사용) > 하나를 만들어서 여러 곳에서 사용이 가능하다.
- fragmentActivity 내의 어떤 동작 또는 사용자 인터페이스의 일부를 나타낸다.
- 여러개의 fragment를 하나의 액티비티에 결합하여 창이 여러 개인 UI를 빌드할 수 있으며 하나의 fragment를 여러 액티비티에서 재사용할 수 있다.
- 액티비티의 모듈식 섹션
- 자체적인 수명 주기를 갖고, 자체 입력 이벤트를 수신한다.
    - 수명 주기는 호스트 액티비티(fragmentActivity)의 수명 주기에 직접적으로 영향을 받는다.
- 다른 액티비티에 재사용할 수 있는 하위 액티비티같은 개념.
- 액티비티가 방대해졌을 때 사용하면 좋음.

** 생명주기 (액티비티보다 단계가 많음)
- 액티비티의 라이프 사이클에 종속적이다.
- 액티비티의 라이프 사이클 상태에 따라 변경된다.
    단, fragment의 라이프 사이클이 액티비티의 라이프 사이클에 영향을 줄 순 없다.

- onAttach
    - fragment가 액티비티와 연결되는 경우 호출
    - 액티비티가 전달
- onCreate
    - fragment를 생성할 때 시스템에서 호출
    - 초기화 작업
- onCreateView
    - fragment가 자신의 인터페이스를 처음으로 그릴 시간에 호출
    - view를 반환
    - 화면이 없을 경우 null을 리턴
- onPause
    - 사용자가 fragment를 떠난다는 것을 나타내는 첫번째 신호.
    - 액티비티와 동일
    - 변경 사항을 저장하면 좋다.
- onDetach
    - fragment가 액티비티와 연결이 끊어지는 중일 때 호출.

** 생성방법
> fragment 독립적으로 존재하나 activity로 가져오는 방법.
> id 반드시 필요.
- xml
- 코드


** commit = 끝
1. commit
    - 저장을 한 경우 실행할 수 없다. (IllegalStateException 오류 발생 가능)
    - 작업을 메인 쓰레드에 예약 후 실행.
2. commitAllowingStateLoss : 저장을 한 경우 예외가 발생하지 않고 그냥 손실된다.
3. commitNow : 예약없이 바로 실행
4. commitNowAllowingStateLoss